name: Create new cohort

on:
  issues:
    types: labeled

env:
  GH_TOKEN: ${{ secrets.GH_PAT }}

jobs:

  parse_issue:
    if: ${{ github.event.label.name == 'cohort' }}
    name: Parse Issue data
    runs-on: ubuntu-latest
    outputs:
      org: ${{ steps.extract.outputs.org }}
      lesson_repo: ${{ steps.extract.outputs.repo }}
      assignments: ${{ steps.extract.outputs.assignments }}
    steps:
      - name: Parse issue
        id: parse
        uses: zentered/issue-forms-body-parser@v2.1.1
      - name: Extract relevant fields
        id: extract
        run: |
          echo "org=$(jq -r '."organization-name".content|.[]' ${{ steps.parse.outputs.data }})" >> $GITHUB_OUTPUT
          echo "repo=$(jq -r '."lesson-repository".content|.[]' ${{ steps.parse.outputs.data }})" >> $GITHUB_OUTPUT
          echo "assignments=$(jq -c '."list-of-assignments".content' ${{ steps.parse.outputs.data }})" >> $GITHUB_OUTPUT
      - name: Show output
        run: |
          echo ${{ toJson(steps.parse.outputs.data) }} >> "parse_data.json"
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: parse-data
          path: parse_data.json

  create_lesson_repo:
    name: Fork lesson repo
    needs: parse_issue
    runs-on: ubuntu-latest
    env:
      ORG: ${{ needs.parse_issue.outputs.org }}
      REPO: ${{ needs.parse_issue.outputs.lesson_repo }}
    steps:
      - name: Fork lesson repo
        if: env.REPO != '*No response*'
        run: |
          echo 'gh repo fork ${{ github.repository_owner }}/${{ env.REPO }} --org ${{ env.ORG }}'

